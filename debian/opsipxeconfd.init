#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          opsipxeconfd
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: opsi pxe config service
# Description:       Opsi PXE Configuration Service
### END INIT INFO

DAEMON=/usr/sbin/opsipxeconfd
USER=root
LOGFILE=/var/log/opsi/opsipxeconfd.log
PIDDIR=/var/run
PIDFILE=$PIDDIR/opsipxeconfd.pid


# See if the binary is there
if [ ! -x $DAEMON ]; then
	echo Binary \"${DAEMON}\" not found or not executable!
	exit 1
fi

case "$1" in
	start)
		echo -n "Starting opsi pxe configuration service.."
		
		# Make sure we have our PIDDIR, even if it's on a tmpfs
		install -o $USER -g root -m 755 -d $PIDDIR
		
		# Make sure logfile is writable
		test -e $LOGFILE && chown -R $USER $LOGFILE
		
		if [ -f $PIDFILE ] && ps h `cat $PIDFILE` > /dev/null; then
			echo ".   (already running)."
			exit 0
		else
			rm -f $PIDFILE 2>/dev/null
					
			su - $USER -c "$DAEMON start"
			
			running=false
			i=1
			while [ "$running" != "true" -a $i -le 10 ]; do
				echo -n "."
				if ([ -f $PIDFILE ] && ps h `cat $PIDFILE` > /dev/null); then
					running=true
				else
					sleep 1
					i=$(($i+1))
				fi
			done
			
			if [ "$running" = "true" ]; then
				echo "   (done)."
			else
				echo "   (failed)."
				exit 1
			fi
		fi
		;;
	stop)
		echo -n "Stopping opsi pxe configuration service...   "
		
		if [ -f $PIDFILE ] && ps h `cat $PIDFILE` > /dev/null; then
			$DAEMON stop 2>/dev/null || kill `cat $PIDFILE`
			echo "(done)."
		else
			echo "(not running)."
		fi
		;;
	status)
		echo -n "Checking status of opsi pxe configuration service...   "
		
		if [ -f $PIDFILE ] && ps h `cat $PIDFILE` > /dev/null; then
			echo "(running)."
			exit 0
		fi
		echo "(not running)."
		exit 1
		;;
	reload)
		echo -n "Reloading opsi pxe configuration service...   "
		
		if [ -f $PIDFILE ] && ps h `cat $PIDFILE` > /dev/null; then
			start-stop-daemon --stop --signal HUP --pidfile $PIDFILE > /dev/null
			echo "(done)."
		else
			echo "(not running)."
		fi
		;;
	restart|force-reload)
		$0 stop
		sleep 1
		$0 start
		;;
	*)
		echo "Usage: /etc/init.d/opsiconfd {start|stop|status|reload|restart|force-reload}"
		exit 1
		;;
esac

exit 0

