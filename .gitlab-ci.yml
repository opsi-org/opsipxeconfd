image: docker.uib.gmbh/opsi/dev/pybuilder:uib-python-3.10

stages:
  - test
  - build
  - publish

.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install debhelper osc tar wget
  wget "$OPSIDEVTOOLS_URL_LINUX_X64" -O opsi-dev-tools.tar.gz
  tar -xvf opsi-dev-tools.tar.gz

.prepare_tests: &prepare_tests |
  # Install debian packages
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install wget git mariadb-client iproute2 net-tools iputils-ping

  groupadd opsiadmin
  groupadd pcpatch
  useradd adminuser
  useradd opsiconfd
  echo "adminuser:adminuser" | chpasswd
  adduser adminuser opsiadmin
  adduser opsiconfd opsiadmin
  adduser adminuser pcpatch

  mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "GRANT ALL ON *.* TO 'opsi'@'%';"
  # Get config files from opsi-server package
  [ -e /etc/opsi ] && rm -r /etc/opsi
  [ -e ../opsi-server ] && rm -r ../opsi-server
  url=$(git remote -v | grep fetch | cut -f2 | sed s'#/opsipxeconfd.git.*#/opsi-server.git#')
  branch=master
  GIT_TERMINAL_PROMPT=0 git clone --branch $branch $url ../opsi-server
  cp -a ../opsi-server/opsi-server_data/etc /etc/opsi
  mkdir /var/run/opsipxeconfd/
  chown adminuser:opsiadmin /var/run/opsipxeconfd
  chmod 775 /var/run/opsipxeconfd
  mkdir /var/log/opsi
  # Set mysql address in config
  sed -i "s/127.0.0.1/mysql/" /etc/opsi/backends/mysql.conf
  # Use mysql backend only
  echo ".* : mysql" > /etc/opsi/backendManager/dispatch.conf
  # Configure opsiconfd
  mkdir -p /var/lib/opsi/repository /var/lib/opsi/depot
  touch /etc/opsi/opsipxeconfd.conf
  # Installing opsi test modules file
  echo "${OPSI_TEST_MODULES}" > /etc/opsi/modules

  # Install poetry
  pip3 install poetry
  poetry config experimental.new-installer false
  poetry install
  poetry run opsipxeconfd --setup
  # Create adminuser used with opsiconfd-perftest.py
  echo "Set OPSI STATIC DIR"
  export OPSICONFD_STATIC_DIR="opsiconfd_data/static"


.pytest: &pytest |
  poetry run opsipxeconfd start --log-level 6 &
  sleep 10
  echo "---------------------------------------"
  echo "Run tests"
  echo "---------------------------------------"
  echo "Run tests"
  poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport.xml --cov-append --cov opsipxeconfd --cov-report term --cov-report xml -v tests

.pylint: &pylint |
  echo "---------------------------------------"
  echo "Run pylint"
  echo "---------------------------------------"
  poetry run pylint --disable=R,fixme opsipxeconfd tests
  poetry run flake8 opsipxeconfd tests

test:pylint-pytest:
  services:
    - name: mysql:latest
      command:
        - --max_connections=1000
        - --default-authentication-plugin=mysql_native_password
  variables:
    MYSQL_ROOT_PASSWORD: "opsi"
    MYSQL_DATABASE: "opsi"
    MYSQL_USER: "opsi"
    MYSQL_PASSWORD: "opsi"
  stage: test
  script:
    - *prepare_tests
    - *pylint
    - *pytest

build:linux-pyinstaller:
  stage: build
  script:
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv opsipxeconfd opsipxeconfd.src
    - mv dist/opsipxeconfd ./opsipxeconfd-amd64
    # Check if binary is working
    - ./opsipxeconfd-amd64/opsipxeconfd -c opsipxeconfd_data/opsipxeconfd.conf --version
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-tool -l info --binary-push opsipxeconfd-amd64/opsipxeconfd "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-tool -l info --binary-push opsipxeconfd-amd64/opsipxeconfd'
  artifacts:
    name: 'opsipxeconfd-linux-pyinstaller'
    paths:
      - opsipxeconfd-amd64
    expire_in: 2 day

build:arm64-pyinstaller:
  image: python:3.7-stretch
  stage: build
  tags:
    - arm64
  script:
    - *install_tools
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv dist/opsipxeconfd ./opsipxeconfd-arm64
    # Check if binary is working
    - ./opsipxeconfd-arm64/opsipxeconfd -c opsipxeconfd_data/opsipxeconfd.conf --version
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-tool -l info --binary-push opsipxeconfd-arm64/opsipxeconfd "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-tool -l info --binary-push opsipxeconfd-arm64/opsipxeconfd'
  artifacts:
    name: 'opsipxeconfd-arm64-pyinstaller'
    paths:
      - opsipxeconfd-arm64
    expire_in: 2 day

publish:obs_int:
  image: python:3.7-stretch
  stage: publish
  dependencies:
    - build:linux-pyinstaller
    - build:arm64-pyinstaller
  script:
    - *install_tools
    - poetry run opsi-dev-tool -l info --obs-update-package https://obs.uib.gmbh home:uibmz:opsi:4.2:development
  only:
    - tags

publish:obs_ext:
  image: python:3.7-stretch
  stage: publish
  dependencies:
    - build:linux-pyinstaller
    - build:arm64-pyinstaller
  script:
    - *install_tools
    - poetry run opsi-dev-tool -l info --obs-update-package https://build.opensuse.org home:uibmz:opsi:4.2:development
  only:
    - tags
