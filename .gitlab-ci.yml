image: python:3.7-stretch

stages:
  - test
  - build
  - publish

.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install debhelper osc
  pip3 install --trusted-host pypi.uib.gmbh --index-url http://pypi.uib.gmbh:8080/simple opsi-dev-tools
  pip3 install poetry

.prepare_tests: &prepare_tests |
  # Install debian packages
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install wget git python3-pip python3-venv libmysqlclient-dev mysql-client iproute2 net-tools iputils-ping
  # Deactivate mysql strict mode
  mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION';"
  #mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "CREATE USER 'opsi'@'%' IDENTIFIED BY 'opsi';"
  mysql --host=mysql --user=root --password=${MYSQL_ROOT_PASSWORD} -e "GRANT ALL ON *.* TO 'opsi'@'%';"
  # Get config files from opsi-server package
  [ -e /etc/opsi ] && rm -r /etc/opsi
  [ -e ../opsi-server ] && rm -r ../opsi-server
  url=$(git remote -v | grep fetch | cut -f2 | sed s'#/opsipxeconfd.git.*#/opsi-server.git#')
  branch=master
  GIT_TERMINAL_PROMPT=0 git clone --branch $branch $url ../opsi-server
  cp -a ../opsi-server/opsi-server_data/etc /etc/opsi
  # Set mysql address in config
  sed -i "s/127.0.0.1/mysql/" /etc/opsi/backends/mysql.conf
  # Use mysql backend only
  echo ".* : mysql" > /etc/opsi/backendManager/dispatch.conf
  # Configure opsiconfd
  mkdir -p /var/lib/opsi/repository /var/lib/opsi/depot
  # Installing opsi test modules file
  echo "${OPSI_TEST_MODULES}" > /etc/opsi/modules
  # TODO: restore some backend
  # Install poetry
  pip3 install poetry
  poetry install
  poetry run opsipxeconfd --setup
  # Create adminuser used with opsiconfd-perftest.py
  groupadd opsiadmin
  groupadd pcpatch
  useradd adminuser
  useradd opsiconfd
  echo "adminuser:adminuser" | chpasswd
  adduser adminuser opsiadmin
  adduser opsiconfd opsiadmin
  adduser adminuser pcpatch
  echo "Set OPSI STATIC DIR"
  export OPSICONFD_STATIC_DIR="opsiconfd_data/static"
  echo "${OPSICONFD_STATIC_DIR}"
  mkdir /var/run/opsipxeconfd/
  touch /etc/opsi/opsipxeconfd.conf
  mkdir /var/log/opsi

.pytest: &pytest |
  #poetry run opsipxeconfd start &
  #sleep(10)
  echo "Run tests"
  poetry run pytest -s


test:pytest:
  image: ubuntu:focal
  services:
    - mysql:latest
  variables:
    MYSQL_ROOT_PASSWORD: "opsi"
    MYSQL_DATABASE: "opsi"
    MYSQL_USER: "opsi"
    MYSQL_PASSWORD: "opsi"
  stage: test
  script:
    - *prepare_tests
    - *pytest

build:linux-pyinstaller:
  stage: build
  script:
    - *install_tools
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv opsipxeconfd opsipxeconfd.src
    - mv dist/opsipxeconfd .
    # Check if binary is working
    - ./opsipxeconfd/opsipxeconfd -c opsipxeconfd_data/opsipxeconfd.conf --version
  artifacts:
    name: 'opsipxeconfd-linux-pyinstaller'
    paths:
      - opsipxeconfd
    expire_in: 2 day

publish:obs_int:
  stage: publish
  dependencies:
    - build:linux-pyinstaller
  script:
    - *install_tools
    - opsi-dev-tool -l info --obs-update-package https://obs.uib.gmbh home:uibmz:opsi:4.2:experimental
  only:
    - tags

publish:obs_ext:
  stage: publish
  dependencies:
    - build:linux-pyinstaller
  script:
    - *install_tools
    - opsi-dev-tool -l info --obs-update-package https://build.opensuse.org home:uibmz:opsi:4.2:experimental
  only:
    - tags
