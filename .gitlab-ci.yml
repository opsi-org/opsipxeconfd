image: docker.uib.gmbh/opsi/dev/pybuilder:uib-python-3.10

stages:
  - test
  - build
  - publish


.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install debhelper osc tar wget
  if [ "$(dpkg --print-architecture)" = "amd64" ]; then
    wget "$OPSIDEVTOOLS_URL_LINUX_X64" -O opsi-dev-tools.tar.gz
  else
    wget "$OPSIDEVTOOLS_URL_LINUX_ARM64" -O opsi-dev-tools.tar.gz
  fi
  tar -xvf opsi-dev-tools.tar.gz

.prepare_tests: &prepare_tests |
  bash /entrypoint.sh &
  apt update
  apt --yes install --no-install-recommends curl build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev
  wget https://www.python.org/ftp/python/3.11.1/Python-3.11.1.tgz
  tar -xvf Python-3.11.1.tgz
  cd Python-3.11.1
  ./configure > /dev/null
  make -j 2 build_all > /dev/null
  make EXTRATESTOPTS=--list-tests altinstall
  cd ..
  python3.11 -m pip install certifi
  curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | SSL_CERT_FILE=$(python3.11 -c "import certifi;print(certifi.where())") python3.11 - --version=1.3.2
  ln -s /root/.local/bin/poetry /usr/local/bin/poetry
  while ! nc -v -z -w3 localhost 4447 > /dev/null 2>&1; do sleep 1; done
  source /entrypoint.sh set_environment_vars  # to set hosts for redis/grafana
  poetry install
  poetry run opsipxeconfd --setup

.pytest: &pytest |
  poetry run opsipxeconfd start --log-level 6 &
  sleep 10
  echo "---------------------------------------"
  echo "Run tests"
  echo "---------------------------------------"
  poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport.xml --cov-append --cov opsipxeconfd --cov-report term --cov-report xml -v tests

.pylint: &pylint |
  echo "---------------------------------------"
  echo "Run linters"
  echo "---------------------------------------"
  poetry run pylint --disable=R,fixme opsipxeconfd tests
  poetry run ruff opsipxeconfd tests
  poetry run mypy opsipxeconfd tests


pylint-pytest:
  image:
    name: docker.uib.gmbh/opsi/opsi-server:4.3-development
    entrypoint: [""]
  services:
    - name: mysql:latest
      command:
        - --max_connections=1000
        - --default-authentication-plugin=mysql_native_password
      alias: mysql
    - name: redislabs/redistimeseries:latest
      alias: redis
  variables:
    REDIS_HOST: redis
    OPSI_ADMIN_PASSWORD: vhahd8usaz  # also hardcoded in tests/utils.py
    OPSI_HOST_ROLE: configserver
    OPSI_HOST_ID: "opsi-server.uib.gmbh"  # "test.uib.gmbh"
    OPSI_HOST_KEY: "550b759aedd834f2c41bf3d843779099"
    OPSI_TFTPBOOT: "false"
    MYSQL_HOST: mysql
    MYSQL_ROOT_PASSWORD: "opsi"
    MYSQL_DATABASE: "opsi"
    MYSQL_USER: "opsi"
    MYSQL_PASSWORD: "opsi"
    #OPSICONFD_RESTORE_BACKUP_URL: "http://binaryindex.uib.gmbh/development/testbackup/all/all/testbackup_all_all_1.1.tar.gz"
  stage: test
  script:
    - *prepare_tests
    - *pylint
    - *pytest


build:linux-pyinstaller:
  stage: build
  script:
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv opsipxeconfd opsipxeconfd.src
    - mv dist/opsipxeconfd ./opsipxeconfd-amd64
    # Check if binary is working
    - ./opsipxeconfd-amd64/opsipxeconfd -c opsipxeconfd_data/opsipxeconfd.conf --version
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-tool -l info --binary-push opsipxeconfd-amd64/opsipxeconfd "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-tool -l info --binary-push opsipxeconfd-amd64/opsipxeconfd'
  artifacts:
    name: 'opsipxeconfd-linux-pyinstaller'
    paths:
      - opsipxeconfd-amd64
    expire_in: 2 day

build:arm64-pyinstaller:
  stage: build
  tags:
    - arm64
  script:
    - *install_tools
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv dist/opsipxeconfd ./opsipxeconfd-arm64
    # Check if binary is working
    - ./opsipxeconfd-arm64/opsipxeconfd -c opsipxeconfd_data/opsipxeconfd.conf --version
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-tool -l info --binary-push opsipxeconfd-arm64/opsipxeconfd "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-tool -l info --binary-push opsipxeconfd-arm64/opsipxeconfd'
  artifacts:
    name: 'opsipxeconfd-arm64-pyinstaller'
    paths:
      - opsipxeconfd-arm64
    expire_in: 2 day


publish:obs_ext:
  stage: publish
  dependencies:
    - build:linux-pyinstaller
    - build:arm64-pyinstaller
  script:
    - *install_tools
    - ./opsi-dev-tool -l info --obs-update-package https://build.opensuse.org home:uibmz:opsi:4.3:development
  only:
    - tags
